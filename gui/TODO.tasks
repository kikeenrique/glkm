<?xml version="1.0"?>
<gtodo>
  <category title="glkm-hal" place="0">
    <item>
      <attribute id="1209060231" priority="2" done="0" start_date="733156" enddate="99999999" notify="0" endtime="-60" last_edited="1209060231"/>
      <summary>Add processlist property/method to misc namespace/interface</summary>
      <comment>Add processlist property/method to misc namespace/interface

Key (type)
---------------
misc.processlist (strlist: DBus format "as": array of string)

Values
----------
example: 'init [1] - [0], hald [214] - [1], bash [1245] - [1456]'

Mandatory
-----------------
No

Description
------------------

A string list of process [pid] - [ppid]
</comment>
    </item>
  </category>
  <category title="glkm-gui" place="1">
    <item>
      <attribute id="1209050536" priority="1" done="0" start_date="733156" enddate="99999999" notify="0" endtime="-60" last_edited="1209050536"/>
      <summary>Add kernel module load/unload</summary>
      <comment>Using libsysfs we can add a mechanism to load and unload our linux kernel module.
See libsysfs documentation for more info about implementation.
Mechanism could be a button (or a dialog?).</comment>
    </item>
    <item>
      <attribute id="1211994951" priority="0" done="0" start_date="733190" enddate="99999999" notify="0" endtime="-60" last_edited="1211994951"/>
      <summary>Add custom icons to display in select host dialog</summary>
      <comment>Add custom icons to display in select host dialog.

Links:
http://live.gnome.org/ThemableAppSpecificIcons
http://live.gnome.org/GnomeGoals/AppIcon</comment>
    </item>
    <item>
      <attribute id="1212013175" priority="1" done="0" start_date="733191" enddate="99999999" notify="0" endtime="-60" last_edited="1212013175"/>
      <summary>add doc to code</summary>
      <comment>This is a template of what should be in every function/member/etc

  /** Copy one string to another.
   *
   * PRECONDITION

   * REQUIRE(from != 0)
   * REQUIRE(to != 0)
   *
   * WARNING

   * The to buffer must be long enough to hold
   * the entire from buffer.
   *

   * EXCEPTIONS

   * lalala

   * EXAMPLES

   * 

   * strcpy(somebuf, "test")
   * 

      

   *
   * @param from The string to copy.
   * @param to The buffer to copy the string to.
   *
   * @return void
   */
   void  strcpy(const char* from, char* to); 
</comment>
    </item>
    <item>
      <attribute id="1213744355" priority="0" done="0" start_date="733211" enddate="99999999" notify="0" endtime="-60" last_edited="1213744355"/>
      <summary>window debug needs taking care of menu check</summary>
      <comment>window debug needs taking care of menu check.
Look for "on_close" signal and add a handler that unchecks checkmenu item</comment>
    </item>
  </category>
  <item>
    <attribute id="1204215454" priority="2" done="1" start_date="733100" completed_date="733143" enddate="733101" notify="0" endtime="-60" last_edited="1207940324"/>
    <summary/>
    <comment/>
  </item>
  <category title="glkm-kernel-module" place="2">
    <item>
      <attribute id="1209050649" priority="1" done="0" start_date="733156" enddate="99999999" notify="0" endtime="-60" last_edited="1209050649"/>
      <summary>Add timestamp to output info</summary>
      <comment>Add a timestamp on each debug output.
</comment>
    </item>
    <item>
      <attribute id="1213738198" priority="1" done="0" start_date="733210" enddate="99999999" notify="0" endtime="-60" last_edited="1213738198"/>
      <summary>individuals and dynamicals entries and atribbutes with my kernel</summary>
      <comment>This kernel module code maybe will help to create individuals and dynamicals entries and atribbutes with my kernel module

svn checkout http://eeepc-linux.googlecode.com/svn/trunk/ eeepc-linux-read-only</comment>
    </item>
  </category>
  <category title="glkm-utils" place="3">
    <item>
      <attribute id="1203439632" priority="2" done="1" start_date="733091" completed_date="733098" enddate="733098" notify="1" endtime="-60" last_edited="1204056659"/>
      <summary>Add a quick debug system</summary>
      <comment>
It includes output debug messages through a notebook page placed in the main window.
Debug messages should be printed easily (as in programing) and only when a DEBUG flag is active.</comment>
    </item>
    <item>
      <attribute id="1207589226" priority="0" done="0" start_date="733139" enddate="99999999" notify="0" endtime="-60" last_edited="1208799019"/>
      <summary>create changelog from subversion log</summary>
      <comment>As seen in BASE/Makefile.am into package HAL, it would be nice to have a rule to autobuild Changelog from subversion logs.</comment>
    </item>
    <item>
      <attribute id="1209050365" priority="0" done="0" start_date="733156" enddate="99999999" notify="0" endtime="-60" last_edited="1209050365"/>
      <summary>debug trace macros</summary>
      <comment>It may be useful to have macros like:
TRACE MACROS
TRACE FILE
TRACE_ON
TRACE_OFF
MEM_ON
MEM_OFF
as documented in Thinking in C++ by Bruce Ekel
</comment>
    </item>
    <item>
      <attribute id="1209428846" priority="0" done="0" start_date="733161" enddate="99999999" notify="0" endtime="-60" last_edited="1209428846"/>
      <summary>Add doc graphics from SSII topic </summary>
      <comment>Take a look to old documentation about SSII</comment>
    </item>
  </category>
</gtodo>
